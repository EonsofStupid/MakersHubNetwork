
/* Cyberpunk and Electric Effects CSS */

/* Cyber text effects */
.cyber-text {
  color: var(--impulse-text-primary);
  text-shadow: 0 0 2px rgba(255, 255, 255, 0.5), 0 0 10px rgba(0, 240, 255, 0.2);
  filter: brightness(1.05) contrast(1.05);
  letter-spacing: 0.02em;
}

/* Pulsing effects */
.pulse-subtle {
  animation: pulse-subtle 2s infinite;
}

@keyframes pulse-subtle {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}

.pulse-glow {
  animation: pulse-glow 2s infinite;
}

@keyframes pulse-glow {
  0%, 100% { 
    filter: drop-shadow(0 0 2px rgba(0, 240, 255, 0.5));
    opacity: 0.9;
  }
  50% { 
    filter: drop-shadow(0 0 8px rgba(0, 240, 255, 0.8));
    opacity: 1;
  }
}

/* Scanning line effect */
.scan-line {
  position: relative;
  overflow: hidden;
}

.scan-line::after {
  content: '';
  position: absolute;
  top: -100%;
  left: 0;
  width: 100%;
  height: 1px;
  background: var(--impulse-primary);
  opacity: 0.5;
  animation: scan-line 8s linear infinite;
}

@keyframes scan-line {
  0% { top: -100%; opacity: 0; }
  10% { opacity: 0.8; }
  80% { opacity: 0.2; }
  100% { top: 200%; opacity: 0; }
}

/* Glitch effect */
.glitch-effect {
  position: relative;
}

.glitch-effect::before,
.glitch-effect::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  clip: rect(0, 0, 0, 0);
}

.glitch-effect::before {
  left: -2px;
  text-shadow: 2px 0 var(--impulse-secondary);
  animation: glitch-before 3s infinite linear alternate-reverse;
}

.glitch-effect::after {
  left: 2px;
  text-shadow: -2px 0 var(--impulse-primary);
  animation: glitch-after 2s infinite linear alternate-reverse;
}

@keyframes glitch-before {
  0% { clip: rect(0, 0, 0, 0); }
  10% { clip: rect(0, 100px, 0, 0); }
  20% { clip: rect(0, 0, 20px, 0); }
  30% { clip: rect(0, 0, 0, 50px); }
  100% { clip: rect(0, 0, 0, 0); }
}

@keyframes glitch-after {
  0% { clip: rect(0, 0, 0, 0); }
  10% { clip: rect(0, 0, 15px, 0); }
  20% { clip: rect(0, 30px, 0, 0); }
  30% { clip: rect(50px, 0, 0, 0); }
  100% { clip: rect(0, 0, 0, 0); }
}

/* Cyber grid background */
.cyber-grid {
  position: relative;
}

.cyber-grid::before {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    linear-gradient(to right, transparent 99%, var(--impulse-primary)/10 100%),
    linear-gradient(to bottom, transparent 99%, var(--impulse-primary)/10 100%);
  background-size: 40px 40px;
  pointer-events: none;
  z-index: -1;
}

/* Electric borders */
.electric-border {
  position: relative;
  border: 1px solid var(--impulse-border-normal);
  transition: all 0.3s ease;
}

.electric-border:hover,
.electric-border:focus {
  border-color: var(--impulse-primary);
  box-shadow: 0 0 8px rgba(0, 240, 255, 0.5);
}

.electric-hover {
  transition: all 0.3s ease;
}

.electric-hover:hover,
.electric-hover:focus {
  color: var(--impulse-primary) !important;
  text-shadow: 0 0 8px rgba(0, 240, 255, 0.5);
}

/* Digital noise */
.digital-noise {
  position: relative;
  overflow: hidden;
}

.digital-noise::after {
  content: '';
  position: absolute;
  inset: 0;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.02;
  pointer-events: none;
}

/* Hologram effect */
.hologram {
  position: relative;
  overflow: hidden;
}

.hologram::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg, 
    rgba(0, 240, 255, 0) 0%, 
    rgba(0, 240, 255, 0.05) 25%, 
    rgba(255, 45, 110, 0.05) 50%, 
    rgba(0, 240, 255, 0.05) 75%, 
    rgba(0, 240, 255, 0) 100%
  );
  background-size: 200% 200%;
  animation: hologram-shift 6s linear infinite;
  pointer-events: none;
}

@keyframes hologram-shift {
  0% { background-position: 0% 0%; }
  100% { background-position: 200% 200%; }
}

/* Horizontal scan line effect */
.horizontal-scan {
  position: relative;
  overflow: hidden;
}

.horizontal-scan::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 200%;
  height: 1px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    var(--impulse-primary) 50%, 
    transparent 100%
  );
  animation: horizontal-scan 8s linear infinite;
}

@keyframes horizontal-scan {
  0% { top: -5px; opacity: 0; }
  10% { opacity: 0.8; }
  90% { opacity: 0.2; }
  100% { top: 100%; opacity: 0; }
}
